from collections import deque
import sys
read = sys.stdin.readline

n = input()
graph= [[0]*(n+1) for _ in range(n+1)]
visited= [0]*(n+1)

for _ in range(n):
    a, b = map(int, read().split())
    graph[a][b] = 1
    graph[b][a] =1
    
deq = deque()
dx = [0,0,1,-1]
dy = [1,-1,0,0]

def dfs(x,y):
    if x<0 or x>=n or y<0 or y>=n:
        return False
    
    if graph[x][y]==1:
        global count
        count +=1 
        graph[x][y] =0
        for i in range(4):
            nx = x +dx[i]
            ny = x +dy[i]
            dfs(nx, ny)
        return True
    return False

count =0
result =0
cnt = []
for i in range(n):
    for j in range(n):
        if dfs(i, j) == True:
            cnt.append(count)
            result += 1
            count = 0
            
cnt.sort()
print(result)
for i in range(len(cnt)):
    print(cnt[i])
    
            