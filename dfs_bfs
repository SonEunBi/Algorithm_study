from collections import deque
import sys
read = sys.stdin.readline


def dfs(v):
    visited[v]=1
    print(v, end=" ")
    for i in range(1, n+1):
        if visited1[i] ==0 and graph[v][i] == 1: #연결되어있고, 방문했으면
            dfs(i)
            
def bfs(v):
    deq = deque()
    deq.append(v)
    visited[v] = True
    while deq:
        v = deq.popleft()
        print(v, end=" ")
        for i in range(1, n+1):
            if visited[i] ==0 and graph[v][i] == 1:
                deq.append(i)
                visited[i] = True
    
n, m, v = map(int, read().split())

visited =[0]*(n+1)
graph = [[0]*(n+1) for _ in range(n+1)]
visited1 = [0]*(n+1)

for _ in range(m): #간선의 개수만큼
    a, b = map(int, read().split())
    graph[a][b] = 1
    graph[b][a] = 1

dfs(v)
print()
bfs(v)